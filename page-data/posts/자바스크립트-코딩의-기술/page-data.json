{"componentChunkName":"component---src-templates-post-template-jsx","path":"/posts/자바스크립트-코딩의-기술","result":{"data":{"site":{"id":"Site","siteMetadata":{"title":"Blog by IPADORUSA","subtitle":"웹프론트엔드를 꿈꾼다","copyright":"© All rights reserved.","author":{"name":"IPADORUSA","twitter":"https://twitter.com/kedokedobookedo"},"disqusShortname":"ipadorusa-com","url":"https://ipadorusa.com"}},"markdownRemark":{"id":"9c737057-1a35-51fc-bab0-7900ec20c3fc","html":"<h2>자바스크립트 코딩의 기술 책 소개</h2>\n<p><a href=\"http://www.kyobobook.co.kr/product/detailViewKor.laf?ejkGb=KOR&#x26;mallGb=KOR&#x26;barcode=9791165210205&#x26;orderClick=LEa&#x26;Kc=\">자바스크립트 코딩의 기술(똑똑하게 코딩하는 법)</a>은 책은</p>\n<blockquote>\n<p>조 모건 지음 | 곽현철 옮김 | 길벗 | 2019년 12월 27일 출간한 책이다.</p>\n</blockquote>\n<p>관련 소스는 <a href=\"http://github.com/gilbutITbook/007030\">http://github.com/gilbutITbook/007030</a></p>\n<h2>자바스크립트 코딩의 기술 책의 목차</h2>\n<ul>\n<li>\n<p>1장 변수 할당으로 의도를 표현하라</p>\n<ul>\n<li>TIP 1 const로 변하지 않는 값을 표현하라</li>\n<li>TIP 2 let과 const로 유효 범위 충돌을 줄여라</li>\n<li>TIP 3 블록 유효 범위 변수로 정보를 격리하라</li>\n<li>TIP 4 템플릿 리터럴로 변수를 읽을 수 있는 문자열로 변환하라</li>\n</ul>\n</li>\n<li>\n<p>2장 배열로 데이터 컬렉션을 관리하라</p>\n<ul>\n<li>TIP 5 배열로 유연한 컬렉션을 생성하라</li>\n<li>TIP 6 Includes( )로 존재 여부를 확인하라</li>\n<li>TIP 7 펼침 연산자로 배열을 본떠라</li>\n<li>TIP 8 push( ) 메서드 대신 펼침 연산자로 원본 변경을 피하라</li>\n<li>TIP 9 펼침 연산자로 정렬에 의한 혼란을 피하라</li>\n</ul>\n</li>\n<li>\n<p>3장 특수한 컬렉션을 이용해 코드 명료성을 극대화하라</p>\n<ul>\n<li>TIP 10 객체를 이용해 정적인 키-값을 탐색하라</li>\n<li>TIP 11 Object.assign( )으로 조작 없이 객체를 생성하라</li>\n<li>TIP 12 객체 펼침 연산자로 정보를 갱신하라</li>\n<li>TIP 13 맵으로 명확하게 키-값 데이터를 갱신하라</li>\n<li>TIP 14 맵과 펼침 연산자로 키-값 데이터를 순회하라</li>\n<li>TIP 15 맵 생성 시 부수 효과를 피하라</li>\n<li>TIP 16 세트를 이용해 고윳값을 관리하라</li>\n</ul>\n</li>\n<li>\n<p>4장 조건문을 깔끔하게 작성하라</p>\n<ul>\n<li>TIP 17 거짓 값이 있는 조건문을 축약하라</li>\n<li>TIP 18 삼항 연산자로 빠르게 데이터를 확인하라</li>\n<li>TIP 19 단락 평가를 이용해 효율성을 극대화하라</li>\n</ul>\n</li>\n<li>\n<p>5장 반복문을 단순하게 만들어라</p>\n<ul>\n<li>TIP 20 화살표 함수로 반복문을 단순하게 만들어라</li>\n<li>TIP 21 배열 메서드로 반복문을 짧게 작성하라</li>\n<li>TIP 22 map( ) 메서드로 비슷한 길이의 배열을 생성하라</li>\n<li>TIP 23 filter( )와 find( )로 데이터의 부분집합을 생성하라</li>\n<li>TIP 24 forEach( )로 동일한 동작을 적용하라</li>\n<li>TIP 25 체이닝으로 메서드를 연결하라</li>\n<li>TIP 26 reduce( )로 배열 데이터를 변환하라</li>\n<li>TIP 27 for…in 문과 for…of 문으로 반복문을 정리하라</li>\n</ul>\n</li>\n<li>\n<p>6장 매개변수와 return 문을 정리하라</p>\n<ul>\n<li>TIP 28 매개변수 기본값을 생성하라</li>\n<li>TIP 29 해체 할당으로 객체 속성에 접근하라</li>\n<li>TIP 30 키-값 할당을 단순화하라</li>\n<li>TIP 31 나머지 매개변수로 여러 개의 인수를 변수로 전달하라</li>\n</ul>\n</li>\n<li>\n<p>7장 유연한 함수를 만들어라</p>\n<ul>\n<li>TIP 32 테스트하기 쉬운 함수를 작성하라</li>\n<li>TIP 33 화살표 함수로 복잡도를 낮춰라</li>\n<li>TIP 34 부분 적용 함수로 단일 책임 매개변수를 관리하라</li>\n<li>TIP 35 커링과 배열 메서드를 조합한 부분 적용 함수를 사용하라</li>\n<li>TIP 36 화살표 함수로 문맥 혼동을 피하라</li>\n</ul>\n</li>\n<li>\n<p>8장 클래스로 인터페이스를 간결하게 유지하라</p>\n<ul>\n<li>TIP 37 읽기 쉬운 클래스를 만들어라</li>\n<li>TIP 38 상속으로 메서드를 공유하라</li>\n<li>TIP 39 클래스로 기존의 프로토타입을 확장하라</li>\n<li>TIP 40 get과 set으로 인터페이스를 단순하게 만들어라</li>\n<li>TIP 41 제너레이터로 이터러블 속성을 생성하라</li>\n<li>TIP 42 bind( )로 문맥 문제를 해결하라</li>\n</ul>\n</li>\n<li>\n<p>9장 외부 데이터에 접근하라</p>\n<ul>\n<li>TIP 43 프라미스를 이용해 비동기적으로 데이터를 가져오라</li>\n<li>TIP 44 async/await로 함수를 명료하게 생성하라</li>\n<li>TIP 45 fetch로 간단한 AJAX 호출을 처리하라</li>\n<li>TIP 46 localStorage로 상태를 장기간 유지하라</li>\n</ul>\n</li>\n<li>\n<p>10장 컴포넌트 아키텍처를 이용해 관련 파일을 모아라</p>\n<ul>\n<li>TIP 47 가져오기와 내보내기로 기능을 분리하라</li>\n<li>TIP 48 npm으로 커뮤니티 코드를 끌어와라</li>\n<li>TIP 49 컴포넌트 아키텍처를 이용해 애플리케이션을 만들어라</li>\n<li>TIP 50 빌드 도구를 이용해 컴포넌트를 결합하라</li>\n<li>TIP 51 CSS 애니메이션을 활용하라</li>\n</ul>\n</li>\n</ul>\n<h2>자바스크립트 코딩의 기술 책 요약 중 메모</h2>\n<ul>\n<li>범위:1장~2장</li>\n</ul>\n<p>위 항목으로 읽다가 메모가 필요한건 머리속에 다시 기억하기 위해 기록.</p>\n<ul>\n<li>\n<p>TIP 1 const로 변하지 않는 값을 표현하라</p>\n<ul>\n<li>될수 있으면 조작(mutation)을 피하는 것이 최선이다.</li>\n</ul>\n</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> discountable <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n<span class=\"token comment\">// 코드를 몇 행 건너뛰었습니다.</span>\n<span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> cart<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>cart<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>discountAvailable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    discountable<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>cart<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span>\n<span class=\"token comment\">// better</span>\n<span class=\"token keyword\">const</span> discountable <span class=\"token operator\">=</span> cart<span class=\"token punctuation\">.</span><span class=\"token function\">filter</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">item</span> <span class=\"token operator\">=></span> item<span class=\"token punctuation\">.</span>discountAvailable<span class=\"token punctuation\">)</span></code></pre></div>\n<p>위 예시 코드 <a href=\"https://github.com/gilbutITbook/007030/blob/master/variables/const/const.js\">TIP 1 const로 변하지 않는 값을 표현하라</a></p>\n<ul>\n<li>TIP 7 펼침 연산자로 배열을 본떠라</li>\n</ul>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items<span class=\"token punctuation\">,</span> removable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">const</span> updated <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span>\n  <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token keyword\">let</span> i <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span> i <span class=\"token operator\">&lt;</span> items<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">;</span> i<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">!==</span> removable<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n      updated<span class=\"token punctuation\">.</span><span class=\"token function\">push</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">}</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> updated\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 예시 코드 <a href=\"https://github.com/gilbutITbook/007030/blob/master/arrays/spread/problem.js\">TIP 7 펼침 연산자로 배열을 본떠라</a></p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items<span class=\"token punctuation\">,</span> removable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>removable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>removable<span class=\"token punctuation\">)</span>\n    items<span class=\"token punctuation\">.</span><span class=\"token function\">splice</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> items\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 예시 코드 <a href=\"https://github.com/gilbutITbook/007030/blob/master/arrays/spread/splice.js\">TIP 7 펼침 연산자로 배열을 본떠라</a></p>\n<p>오 처음 예시보다 두번째 예시는 좀 더 단순해 졌음. 하지만.. 원본 배열을… 건드리네요..</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items<span class=\"token punctuation\">,</span> removable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>removable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>removable<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">concat</span><span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> items\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>위 예시 코드 <a href=\"https://github.com/gilbutITbook/007030/blob/master/arrays/spread/slice.js\">TIP 7 펼침 연산자로 배열을 본떠라</a></p>\n<p>훌륭한 코드라 하지만 책에서도 눈으로만 봐서는 정확히 어떤 작업을 하는지 알기 힘들다는 지적이 있음. 개 공감..</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">removeItem</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">items<span class=\"token punctuation\">,</span> removable</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">includes</span><span class=\"token punctuation\">(</span>removable<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">const</span> index <span class=\"token operator\">=</span> items<span class=\"token punctuation\">.</span><span class=\"token function\">indexOf</span><span class=\"token punctuation\">(</span>removable<span class=\"token punctuation\">)</span>\n    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">...</span>items<span class=\"token punctuation\">.</span><span class=\"token function\">slice</span><span class=\"token punctuation\">(</span>index <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> items\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> book <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'Reasons and Persons'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'Derek Parfit'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">19.99</span><span class=\"token punctuation\">]</span>\n\n<span class=\"token keyword\">function</span> <span class=\"token function\">formatBook</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">title<span class=\"token punctuation\">,</span> author<span class=\"token punctuation\">,</span> price</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">return</span> <span class=\"token template-string\"><span class=\"token template-punctuation string\">`</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>title<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> by </span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>author<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token string\"> $</span><span class=\"token interpolation\"><span class=\"token interpolation-punctuation punctuation\">${</span>price<span class=\"token interpolation-punctuation punctuation\">}</span></span><span class=\"token template-punctuation string\">`</span></span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token function\">formatBook</span><span class=\"token punctuation\">(</span>book<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> book<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span>\n\n<span class=\"token function\">formatBook</span><span class=\"token punctuation\">(</span><span class=\"token operator\">...</span>book<span class=\"token punctuation\">)</span></code></pre></div>\n<p>훨씬 눈에 익숙하게 좋아지긴 했는데. formatBook의 예시가 더 좋아 보인다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">const</span> staff <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Joe'</span><span class=\"token punctuation\">,</span>\n    years<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Theo'</span><span class=\"token punctuation\">,</span>\n    years<span class=\"token operator\">:</span> <span class=\"token number\">5</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">{</span>\n    name<span class=\"token operator\">:</span> <span class=\"token string\">'Dyan'</span><span class=\"token punctuation\">,</span>\n    years<span class=\"token operator\">:</span> <span class=\"token number\">10</span><span class=\"token punctuation\">,</span>\n  <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">]</span>\n<span class=\"token keyword\">function</span> <span class=\"token function\">sortByYears</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>years <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>years<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>years <span class=\"token operator\">-</span> b<span class=\"token punctuation\">.</span>years\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">const</span> <span class=\"token function-variable function\">sortByName</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token parameter\">a<span class=\"token punctuation\">,</span> b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">{</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">===</span> b<span class=\"token punctuation\">.</span>name<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span> <span class=\"token number\">0</span>\n  <span class=\"token punctuation\">}</span>\n  <span class=\"token keyword\">return</span> a<span class=\"token punctuation\">.</span>name <span class=\"token operator\">></span> b<span class=\"token punctuation\">.</span>name <span class=\"token operator\">?</span> <span class=\"token number\">1</span> <span class=\"token operator\">:</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span>\n<span class=\"token punctuation\">}</span>\n\nstaff<span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>sortByYears<span class=\"token punctuation\">)</span>\n\n<span class=\"token punctuation\">[</span><span class=\"token operator\">...</span>staff<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span><span class=\"token function\">sort</span><span class=\"token punctuation\">(</span>sortByYears<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre></div>\n<p>spread 로 작성하면 변화없이 정렬을 할수 있다.</p>\n<h3>자바스크립트 코딩의 기술 1장~2장 결론</h3>\n<p>소소하지만 괜찮은 팁과 적절한 예제로 설명 해줘 좋은 책이다.</p>\n<p>급 마무리…</p>\n<p>피곤해서 마무리한다..</p>\n<p>다음에는 3장~4장중에 기억하고 괜찮은 걸 기억하기 위해 글을 작성 하겠다.</p>","fields":{"tagSlugs":["/tags/자바스크립트-코딩의-기술/","/tags/자바스크립트-기술/","/tags/javascript/","/tags/똑똑하게-코딩하는-법/"],"slug":"/posts/자바스크립트-코딩의-기술"},"frontmatter":{"title":"자바스크립트 코딩의 기술","tags":["자바스크립트 코딩의 기술","자바스크립트 기술","javascript","똑똑하게 코딩하는 법"],"date":"2020-03-31 21:44:30","description":"자바스크립트 코딩의 기술(똑똑하게 코딩하는 법) 읽으면서 정리 합니다. 생각보다 좋은 책인거 같아 구매후 정리중"}}},"pageContext":{"slug":"/posts/자바스크립트-코딩의-기술"}}}